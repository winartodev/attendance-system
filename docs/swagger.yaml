openapi: '3.0.2'
info:
  title: Attendance System
  description: |-
    Here is attendance system API. We can login, register account, create employee, and set clock in and clocked out
    to use this api we must login first and get the token in data field, to login u can use this account below <br>
      + username: admin, 
      + password: admin

  version: '1.0'
servers:
  - url: https://attendance-system-001.fly.dev
paths:
  /users/login:
    post:
      tags:
        - "user"
      requestBody:
        content:
          multipart/form-data:
            schema:            
              type: object
              properties:    
                username:           
                  type: string
                  example: admin
                password:     
                  type: string
                  example: admin
      responses:
        '200':
          description: User success loggedin 
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "User success logged in"
                data: "<token_api>"
  /users/register:
    post:
      tags:
        - "user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User success registered 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "User success registered"
                data: null
  /users/logout:
    post: 
      tags:
        - "user"
      responses:
        '200':
          description: OK
  /admin/employees:
    post:
      tags:
        - "employee"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Success add employee
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "Employee success created"
                data: null
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    get:
      tags:
        - "employee"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success get all employee
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: ""
                data: 
                  employees: 
                    - id: 1
                      name: "budi"
                      email: "budi@mail.com"   
        '500':
          description: Internal Server Error         
  /admin/employees/{id}:
    get:
      tags:
        - "employee"
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Success get all employee
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: ""
                data: 
                  employee: 
                    id: 1
                    name: "budi"
                    email: "budi@mail.com"    
        '500':
          description: Internal Server Error 
    put:
      tags:
        - "employee"
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Success update employee
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "Employee success updated"
                data: null
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    delete:
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      tags:
        - "employee"
      responses:
        '200':
          description: Success delete employee
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "Employee success deleted"
                data: null
        '500':
          description: Internal Server Error
  /admin/attendances:
    post:
      security:
        - bearerAuth: []
      tags:
        - "attendances"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendance'
      responses:
        '200':
          description: Success add employee
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "Attendance success created"
                data: null
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    get:
      security:
        - bearerAuth: []
      tags:
        - "attendances"
      responses:
        '200':
          description: Success get all attendance
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: ""
                data: 
                  employees: 
                    - id: 1
                      employee_id: 1
                      clocked_in: "2023-01-02T17:18:00+07:00"   
                      clocked_out: "2023-01-02T17:18:00+07:00"   
        '500':
          description: Internal Server Error     
  /admin/attendances/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      tags:
        - "attendances"
      responses:
        '200':
          description: Success get attendance
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: ""
                data: 
                  employee: 
                    id: 1
                    employee_id: 1
                    clocked_in: "2023-01-02T17:18:00+07:00"   
                    clocked_out: "2023-01-02T17:18:00+07:00"   
        '500':
          description: Internal Server Error 
    put:
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      tags:
        - "attendances"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendance'
      responses:
        '200':
          description: Success update attendance
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "Attendance success updated"
                data: null
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    delete:
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/id'
      tags:
        - "attendances"
      responses:
        '200':
          description: Success delete attendance
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
              example:
                status: "OK"
                message: "Attendance success deleted"
                data: null
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 

  parameters:
    id: 
      name: id
      in: path
      required: true
      schema: 
        type: integer
        format: int64
        default: 0
  
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Budi"
        email:
          type: string
          example: "budi@mail.com"

    Attendance:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        employee_id:
          type: integer
          format: int64
          example: 1
        clocked_in:
          type: string
          example: "2023-01-02T17:18:00+07:00"
        clocked_out:
          type: string
          example: "2023-01-02T17:18:00+07:00"
      
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: "budi"
        password:
          type: string
          example: "123123"
        role:
          description: to mapping is admin or not if admin use 1 
          type: integer
          format: int64
          example: 1
    
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object